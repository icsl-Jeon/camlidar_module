<launch>
<!-- first, roslaunch px4_code  lego_loam_px4.launch -->
    <arg name="parameter_directory" default="$(find camlidar_module)/params/bluefox_vlp16_BS.yaml"/>
    <arg name="save_directory" default="/home/"/>
    <arg name="snapshot_saving_onoff" default="false"/>
    <arg name="flag_debugimage" default="true"/>
    <arg name = "base_link_fusion" default="base_link_fusion"/>
    <arg name = "rviz" default="true"/>

    <arg name="binning_on" default="false"/>
    <arg name="software_binning_on" default="true"/>
    <arg name="software_binning_level" default="1"/>
    <arg name="triggered_on" default="true"/>
    <arg name="auto_exposure_control" default="false"/>
    <arg name="auto_gain_control" default="false"/>
    <arg name="high_dynamic_range_on" default="true"/>
    <arg name="expose_us" default="15000"/>
    <arg name="frame_rate" default="10.0"/>
    <arg name = "map_align_angle" default = "0.0"/>
    <arg name = "imshow" default = "true"/>

    <!-- naked turtlebot  -->
    <arg name = "H_max" value = "45" />
    <arg name = "H_min" value = "0" />
    <arg name = "S_max" value = "118" />
    <arg name = "S_min" value = "39" />
    <arg name = "V_max" value = "196" />
    <arg name = "V_min" value = "53" />

   <node pkg="bluefox" name="bluefox_multiple_camlidar_node" type="bluefox_multiple_camlidar_node" output="screen">
        <param name="binning_on" type="bool" value="$(arg binning_on)"/>
        <param name="software_binning_on" type="bool" value="$(arg software_binning_on)"/>
        <param name="software_binning_level" type="int" value="$(arg software_binning_level)"/>
        <param name="triggered_on" type="bool" value="$(arg triggered_on)"/>
        <param name="aec_on" type="bool" value="$(arg auto_exposure_control)"/>
        <param name="agc_on" type="bool" value="$(arg auto_gain_control)"/>
        <param name="hdr_on" type="bool" value="$(arg high_dynamic_range_on)"/>
      	<param name="expose_us" type="int" value="$(arg expose_us)"/>
        <param name="frame_rate" type="double" value="$(arg frame_rate)"/>
    </node>


   <node pkg="rosserial_python" type="serial_node.py" name="arduino_UART" args="_port:=/dev/ttyACM0 _baud:=460800" output="screen">
    </node>


    <!-- wall alignment for rect xy claming for obstacle tracker -->
    <node pkg="tf" type="static_transform_publisher" name="mapAlighn" args="0 0 0  0 0 $(arg map_align_angle) /map /map_wall_align     1"/>

<!-- our velodyne's time is different  -->
    <node pkg="tf" type="static_transform_publisher" name="toVelodyne" args="0 0 0  0.7071068 0.7071068 0 0 $(arg base_link_fusion) /velodyne  100"/>


    <!-- camlidar with hsv -->
    <node pkg = "camlidar_module" type = "hsv_target_pcl_extractor" name="target_hsv_extractor" output="screen">
        <param name= "map_frame" value = "/map"/>
        <param name= "baselink_id" value = "$(arg base_link_fusion)"/>
        <param name="parameter_directory" type="string" value="$(arg parameter_directory)"/>
        <param name = "imshow" value = "$(arg imshow)" />
        <param name = "flag_debugimage" value = "$(arg imshow)" />


<!--         <param name = "H_max" value = "$(arg H_max)" /> -->
<!--         <param name = "H_min" value = "$(arg H_min)"/> -->
<!--         <param name = "S_max" value = "$(arg S_max)" /> -->
<!--         <param name = "S_min" value = "$(arg S_min)" /> -->
<!--         <param name = "V_max" value = "$(arg V_max)" /> -->
<!--         <param name = "V_min" value = "$(arg V_min)" /> -->

    </node>

	<node pkg="octomap_server" type="octomap_tracking_server_node" name="octomap_talker" output="screen" args="">
		<param name="resolution" value="0.1" />
		<param name="frame_id" type="string" value="velodyne" />
<!-- 		<param name="sensor_model/max_range" value="8.0" /> -->
        <param name = "/octomap_talker/filter_speckles" value = "true"/>


		<param name="save_directory" value="$(optenv OCTOMAP_SAVE_DIR ./)" />
		<param name="track_changes" value="true"/>
		<param name="listen_changes" value="false"/>
		<param name="topic_changes" value="/octomap_tracking_server/changeset" />
		<!-- added by JBS -->
<!-- 		<param name="pointcloud_max_z" value="3.0" /> -->
<!-- 		<param name="pointcloud_min_z" value="-0.5" /> -->
<!-- 		<param name="color/a" value="0.5" /> -->

		<param name="filter_ground" value="false" />
        <param name="min_change_pub" value="0" />
		<remap from="cloud_in" to="/lidar0/velodyne_points" />
	</node>



<!--     <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find vijeon)/rviz/lego_obstacle_tracking.rviz" if = "$(arg rviz)"/> -->



</launch>
